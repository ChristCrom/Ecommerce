{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\chris\\\\OneDrive\\\\Coding\\\\Capstone\\\\Ecommerce\\\\03-frontend\\\\angular-ecommerce\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { from } from 'rxjs';\nimport { OKTA_AUTH } from '@okta/okta-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@okta/okta-auth-js\";\nexport class AuthInterceptorService {\n  constructor(oktaAuth) {\n    this.oktaAuth = oktaAuth;\n  }\n\n  intercept(request, next) {\n    return from(this.handleAccess(request, next));\n  }\n\n  handleAccess(request, next) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const securedEndpoints = ['http://localhost:8080/api/orders'];\n\n      if (securedEndpoints.some(url => request.urlWithParams.includes(url))) {\n        const accessToken = yield _this.oktaAuth.getAccessToken();\n        request = request.clone({\n          setHeaders: {\n            Authorization: 'Bearer' + accessToken\n          }\n        });\n      } // return next.handle(request).toPromise();\n\n\n      return first;\n    })();\n  }\n\n}\n\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(OKTA_AUTH));\n};\n\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/chris/OneDrive/Coding/Capstone/Ecommerce/03-frontend/angular-ecommerce/src/app/services/auth-interceptor.service.ts"],"names":["from","OKTA_AUTH","i0","i1","AuthInterceptorService","constructor","oktaAuth","intercept","request","next","handleAccess","securedEndpoints","some","url","urlWithParams","includes","accessToken","getAccessToken","clone","setHeaders","Authorization","first","ɵfac","AuthInterceptorService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,MAAMC,sBAAN,CAA6B;AAChCC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACDC,EAAAA,SAAS,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACrB,WAAOT,IAAI,CAAC,KAAKU,YAAL,CAAkBF,OAAlB,EAA2BC,IAA3B,CAAD,CAAX;AACH;;AACKC,EAAAA,YAAY,CAACF,OAAD,EAAUC,IAAV,EAAgB;AAAA;;AAAA;AAC9B,YAAME,gBAAgB,GAAG,CAAC,kCAAD,CAAzB;;AACA,UAAIA,gBAAgB,CAACC,IAAjB,CAAsBC,GAAG,IAAIL,OAAO,CAACM,aAAR,CAAsBC,QAAtB,CAA+BF,GAA/B,CAA7B,CAAJ,EAAuE;AACnE,cAAMG,WAAW,SAAS,KAAI,CAACV,QAAL,CAAcW,cAAd,EAA1B;AACAT,QAAAA,OAAO,GAAGA,OAAO,CAACU,KAAR,CAAc;AACpBC,UAAAA,UAAU,EAAE;AACRC,YAAAA,aAAa,EAAE,WAAWJ;AADlB;AADQ,SAAd,CAAV;AAKH,OAT6B,CAU9B;;;AACA,aAAOK,KAAP;AAX8B;AAYjC;;AAnB+B;;AAqBpCjB,sBAAsB,CAACkB,IAAvB,GAA8B,SAASC,8BAAT,CAAwCC,CAAxC,EAA2C;AAAE,SAAO,KAAKA,CAAC,IAAIpB,sBAAV,EAAkCF,EAAE,CAACuB,QAAH,CAAYxB,SAAZ,CAAlC,CAAP;AAAmE,CAA9I;;AACAG,sBAAsB,CAACsB,KAAvB,GAA+B,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,sBAAT;AAAiCyB,EAAAA,OAAO,EAAEzB,sBAAsB,CAACkB,IAAjE;AAAuEQ,EAAAA,UAAU,EAAE;AAAnF,CAAtB,CAA7C","sourcesContent":["import { from } from 'rxjs';\r\nimport { OKTA_AUTH } from '@okta/okta-angular';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@okta/okta-auth-js\";\r\nexport class AuthInterceptorService {\r\n    constructor(oktaAuth) {\r\n        this.oktaAuth = oktaAuth;\r\n    }\r\n    intercept(request, next) {\r\n        return from(this.handleAccess(request, next));\r\n    }\r\n    async handleAccess(request, next) {\r\n        const securedEndpoints = ['http://localhost:8080/api/orders'];\r\n        if (securedEndpoints.some(url => request.urlWithParams.includes(url))) {\r\n            const accessToken = await this.oktaAuth.getAccessToken();\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: 'Bearer' + accessToken\r\n                }\r\n            });\r\n        }\r\n        // return next.handle(request).toPromise();\r\n        return first;\r\n    }\r\n}\r\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) { return new (t || AuthInterceptorService)(i0.ɵɵinject(OKTA_AUTH)); };\r\nAuthInterceptorService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthInterceptorService, factory: AuthInterceptorService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}